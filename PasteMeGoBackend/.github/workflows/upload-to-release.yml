name: Upload to release and publish

on:
  release:
    types: [ published ]

jobs:

  release:
    if: github.repository == 'PasteUs/PasteMeGoBackend'
    name: Build with go ${{ matrix.go_version }} on ${{ matrix.os }} and upload
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        go_version: [ 1.16 ]
        os: [ ubuntu-latest ]

    steps:

      - name: Set up Go ${{ matrix.go_version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go_version }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          go get -u github.com/swaggo/swag/cmd/swag
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Build
        run: |
          GOARCH=amd64 GOOS=linux go build -v -o pastemed .
          GOARCH=amd64 GOOS=linux swag init

      - name: Release Version
        id: release_version
        run: |
          echo ::set-output name=tag::$(echo "${GITHUB_REF}" | sed -e "s/refs\/tags\///g")

      - name: Gzip
        run: |
          mkdir pastemed-linux-amd64
          cp pastemed pastemed-linux-amd64
          cp config.example.json pastemed-linux-amd64
          cp -r systemd pastemed-linux-amd64
          tar -czvf pastemed-${{ steps.release_version.outputs.tag }}-linux-amd64.tar.gz pastemed-linux-amd64
          tar -czvf pastemed-swagger-${{ steps.release_version.outputs.tag }}.tar.gz docs

      - name: Upload bin to release
        uses: JasonEtco/upload-to-release@master
        with:
          args: pastemed-${{ steps.release_version.outputs.tag }}-linux-amd64.tar.gz application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload swagger to release
        uses: JasonEtco/upload-to-release@master
        with:
          args: pastemed-swagger-${{ steps.release_version.outputs.tag }}.tar.gz application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker_push:
    if: github.repository == 'PasteUs/PasteMeGoBackend'
    name: Build with docker on ${{ matrix.os }} and upload
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]

    steps:
      - name: Release Version
        id: release_version
        run: |
          echo ::set-output name=tag::$(echo "${GITHUB_REF}" | sed -e "s/refs\/tags\///g")

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

#      - name: Login to Aliyun Docker Registry
#        uses: docker/login-action@v1
#        with:
#          registry: registry.cn-hangzhou.aliyuncs.com
#          username: ${{ secrets.ALIYUN_DOCKER_REGISTRY_USERNAME }}
#          password: ${{ secrets.ALIYUN_DOCKER_REGISTRY_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: |
            linux/amd64
            linux/arm64
            linux/arm/v7
            linux/arm/v6
            linux/386
          push: true
          tags: |
            pasteme/go-backend:latest
            pasteme/go-backend:${{ steps.release_version.outputs.tag }}
#            registry.cn-hangzhou.aliyuncs.com/pasteus/pasteme-go-backend:latest
#            registry.cn-hangzhou.aliyuncs.com/pasteus/pasteme-go-backend:${{ steps.release_version.outputs.tag }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Trigger Webhook
        run: |
          curl -X POST "${{ secrets.RELEASE_WEBHOOK }}backend"
