name: Go Test

on:
  push:
    branches: [ main ]
  pull_request:

jobs:

  build:
    strategy:
      matrix:
        go_version: [ 1.16 ]
        os: [ ubuntu-latest ]

    name: Build with go ${{ matrix.go_version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go ${{ matrix.go_version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go_version }}
        id: go

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Build
        run: |
          GOARCH=amd64 GOOS=linux go build -v -o pastemed .

  build_swagger:
    strategy:
      matrix:
        go_version: [ 1.16 ]
        os: [ ubuntu-latest ]

    name: Build swagger with go ${{ matrix.go_version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go ${{ matrix.go_version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go_version }}
        id: go

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          go get -u github.com/swaggo/swag/cmd/swag
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Build swagger
        run: |
          GOARCH=amd64 GOOS=linux swag init

  docker_build:
    strategy:
      matrix:
        os: [ ubuntu-latest ]

    name: Build with docker on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: |
            linux/amd64
          push: false

  test_with_mysql:
    strategy:
      matrix:
        # go_version: [1.12, 1.13]
        # remove 1.13 for https://github.com/golang/go/issues/31859
        go_version: [ 1.16 ]
        mysql_version: [ 5.5, 8 ]
        os: [ ubuntu-latest ]

    name: Test with go ${{ matrix.go_version }} using mysql:${{ matrix.mysql_version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    services:
      mysql:
        image: mysql:${{ matrix.mysql_version }}
        env:
          MYSQL_USER: username
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: pasteme
        ports:
          - 4399:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Set up Go ${{ matrix.go_version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go_version }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Test
        run: |
          cp .github/config/config.mysql.json config.json
          bash -x gotest.sh

  test_with_sqlite3:
    strategy:
      matrix:
        # go_version: [1.12, 1.13]
        # remove 1.13 for https://github.com/golang/go/issues/31859
        go_version: [ 1.16 ]
        os: [ ubuntu-latest ]

    name: Test with go ${{ matrix.go_version }} using sqlite3 on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Set up Go ${{ matrix.go_version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go_version }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Test
        run: |
          cp .github/config/config.sqlite3.json config.json
          bash -x gotest.sh
